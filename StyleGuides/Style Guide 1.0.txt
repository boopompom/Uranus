代码规范1.0

说明：代码规范版本1.0 2012年1月12日 郑京杰


一、	Matlab文件名命名规则：
1.	公共函数：公共函数是指被广泛用到的基础函数。
它涵盖了文件读写，格式转换，常量定义，以及其他被多次利用的函数。
公共函数的文件名以“public_”开始，接着一个表示功能特性的名称“xxxXxxXxx”，最后以“.m”结尾。
例如：“public_helloWorld.m”。
2.	模块函数：模块函数通常分为模块主函数，模块附属函数，和模块应用程序入口函数。我们接下来以robertsEdge模块举例。
（1）模块主函数：模块主函数主要用于在Matlab环境下进行测试。这个函数通常有输入和输出参数。
例如：“robertsEdge.m”。
（2）模块附属函数：模块附属函数是模块主函数调用中依赖的除公共函数以外独有的函数。注意：模块附属函数不可以与模块应用程序入口函数同名，即不可以称为“xxx_entry.m”。
例如：“robertsEdge_calculateEdge.m”。
（3）模块应用程序入口函数：模块应用程序入口函数是模块用于生成独立可执行文件时作为主文件编译的函数。这个函数不可以有输入输出参数。关于这个文件的具体规范见下文接口规范。
例如：“robertsEdge_entry.m”。

二、	Matlab文件注释规则：
1.	关于注释：在Matlab的某个函数，例如foo.m，中如果在函数开始的地方写注释，这些注释便会出现在help foo命令里面。另外注释对于维护和修改，理解与交流都是极为重要的。
2.	下面我们以函数mean.m为例，写一下注释。
function [res] = mean(vector)
%MEAN    Average or mean value.
%    Input:    A vector of numbers.
%    Output:    The mean of the numbers in the vector.
%    Author:    Tsenmu
%    Date:    2011.11.01
%    Reference:
%                1. www.google.com
%                2. www.wikipedia.com

    res = sum(vector) / length(vector);
end
3.	注意：由于Matlab对于中文的支持不是很好，所以我们规定注释一律用英文。
注释的第一行紧跟百分号，为全部大写的函数名，接着空四个格，一个或多个完整的句子解释函数功能，句子要有标点结尾。
注释的第二行为输入参数。百分号后，接着四个空格，“Input:”，接着四个空格，然后是一个或多个完整的句子或片段解释输入参数内容。
注释的第三行为输出参数。百分号后，接着四个空格，“Output:”，接着四个空格，然后是一个或多个完整的句子或片段解释输出参数内容。
注释的第四行为作者。百分号后，接着四个空格，“Author:”，接着四个空格，作者姓名，如果有必要在后面可以写邮箱。
注释的第五行为日期。百分号后，接着四个空格，“Date:”，接着四个空格，然后是一串日期，其格式为“YYYY.MM.DD”
注释的第六行为参考文献。百分号后，接着四个空格，“Reference:”，接着换行。
以下的每一行，百分号后空16个空格，从“1. ”开始标记写出参考文献。注意在“1.”后面有一个空格然后才是内容。

三、	数据结构
1.	dataset数据结构：dataset为Matlab内存数据集，实质是4维数组。其中第一、二、四维分别表示长宽高。第三维固定大小为1，并且赋值总为0。这样做是方便在Matlab中通过montage函数分层查看三维图片。
数据集中的每一个元素都是一个从0到255区间的uint8类型整数，通常用来存储灰度图。对于二值图，我们约定所有的二值图以0表示黑色，255表示白色，其他值无效。
2.	urw文件数据结构：urw为内存数据集的二进制文件表示。二进制采用Little Endian存储方式，因此在Intel x86系列CPU中可以正常读入，我们没有测试在Motorola和PowerPC系列CPU上的兼容性。urw文件的格式规定如下：
（1）写出一个uint16类型的列数column，接着写出一个uint16类型的行数row。
（2）对于每一层，首先写出一个uint8类型的值1。接着以列主序写入uint8类型写入column*row个元素。
（3）文件以一个uint8类型的值0结尾。

四、	代码规范
1.	我们暂时先不对函数的代码风格进行具体规范。
2.	请保持Matlab编辑器默认的缩进风格，1 tab = 4空格。
3.	所有语句都要以分号结尾，以防止变量的显示。

五、	接口规范
1.	我们在这里约定统一的模块应用程序入口函数的输入输出规范。
2.	首先我们约定除模块应用程序入口函数以外的其它函数只可以输出进度信息，不可以输出其他信息。
3.	规范内容如下：
（1）输入一个字符串作为输入文件完整路径。
（2）输入一个字符串作为输出文件完整路径。
（3）输出一个整数argc作为参数个数，和一个换行。
（4）接下来输入argc个参数作为argv(i)，对于每一个argv(i)，如果输入值于public_defaultNumber.m中定义的相同，则调用默认值。
（5）接下来输出一组浮点数递增序列，从0.0开始，1.0结束，用来表示运行结束，每一次输出都跟着一个换行。
4.	样例：
function [] = xxx_entry()
    inFileName = input(‘’);
    outFileName = input(‘’);
    argc = 2;
    fprintf(‘%d\n’, argc);
    process = 0.0;
    fprintf(‘%d\n’, process);
    argv(1) = input(‘’);
    if argv(1) == public_defaultNumber()
        argv(1) = 1.0;
    end
    argv(2) = input(‘’);
    if argv(2) == public_defaultNumber()
        argv(2) = 13.8;
    end
    doSomething();
    process = 0.5;
    fprintf(‘%d\n’, process);
    doSomething();
    process = 1.0;
    fprintf(‘%d\n’, process);
end

